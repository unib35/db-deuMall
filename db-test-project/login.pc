// 작성자 : 이종민
// login.pc 
#define _CRT_SECURE_NO_WARNINGS
//-----------------------------------------

#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <conio.h>

/* for oracle */
#include <sqlda.h>
#include <sqlca.h>
#include <sqlcpr.h>


// win32 Visual C 2010 이상컴파일시 추가
#define getch() _getch()
//-----------------------------------------

/*---------------  화면 커서 위치 제어 ----------------------*/
#include < windows.h >
void gotoxy(int x, int y) ;
void getxy(int *x, int *y) ;
void clrscr(void) ;
/*-----------------------------------------------------------*/

void login();
void select_login();

extern void test();
extern void init();

void sql_error();

EXEC SQL BEGIN DECLARE SECTION;
	VARCHAR uid[80];
	VARCHAR pwd[20];
EXEC SQL END DECLARE SECTION;

#define getch() _getch()
#define LOGIN_SUCCESS 1
#define DOWN_KEY 80
#define UP_KEY 72
#define ENTER_KEY 13
#define LOGIN_BUTTON 20
#define CANCEL_BUTTON 22

void login()
{
	_putenv("NLS_LANG=American_America.KO16KSC5601"); //한글사용
	DB_connect();
	clrscr();
	select_login();
	EXEC SQL COMMIT WORK RELEASE ;
	getch();
}

void select_login()
{
	clrscr(); 
	int isLoginFailed = 0;
	while(1){
		clrscr();
		gotoxy(0, 1);
		print_screen("login_screen.txt");
		
		if(isLoginFailed == 1) {
			gotoxy(28 ,14);
			printf("잘못된 ID, PW 입력입니다.");
		}
		isLoginFailed = 1;

		EXEC SQL BEGIN DECLARE SECTION;
		varchar member_id[100];
		varchar pw[100];
		varchar name[100];

		char dynstmt[1000];
		EXEC SQL END DECLARE SECTION;

		char input_id[10]; //id 입력받을 변수
		char input_pw[10]; //pw 입력받을 변수

		EXEC SQL WHENEVER SQLERROR DO sql_error("\7ORACLE ERROR:\n");

		//사용자입력
		gotoxy(35, 9);
		gets(input_id); //id 입력
	
		gotoxy(35, 11);
		gets(input_pw); //pw 입력

		gotoxy(34, 20); // 버튼 선택으로 이동
		//getch();
		
		int arrIndex = 0;
		int buttonYPosition[] = {20, 22};
		//int inputKey = _getch();
		int inputKey;
		
		while(1){
			inputKey  = _getch();
			if(inputKey == ENTER_KEY){
				break;
			}
			else if(inputKey == DOWN_KEY){
				arrIndex = cursorControl(buttonYPosition, sizeof(buttonYPosition) / sizeof(buttonYPosition[0]), arrIndex, DOWN_KEY);
				gotoxy(34, buttonYPosition[arrIndex]);
			}
			else if(inputKey == UP_KEY){
				arrIndex = cursorControl(buttonYPosition, sizeof(buttonYPosition) / sizeof(buttonYPosition[0]), arrIndex, UP_KEY);
				gotoxy(34, buttonYPosition[arrIndex]);
			}		
		}

		sprintf(dynstmt, "SELECT member_id, pw, name FROM members where member_id = '%s' and pw = '%s' ", input_id, input_pw);
		//printf("dynstmt:%s\n", dynstmt);

		EXEC SQL PREPARE S FROM : dynstmt;
		EXEC SQL DECLARE c_cursor CURSOR FOR S;
		EXEC SQL OPEN c_cursor;
		EXEC SQL WHENEVER NOT FOUND DO break;

		for (;;) {
			if(buttonYPosition[arrIndex] == CANCEL_BUTTON) {init();}
			EXEC SQL FETCH c_cursor INTO : member_id, : pw, : name;
			member_id.arr[member_id.len] = '\0';
			pw.arr[pw.len] = '\0';
			name.arr[name.len] = '\0';
			if(member_id.arr != NULL && pw.arr != NULL){
				clrscr();

				switch(buttonYPosition[arrIndex]){
					case LOGIN_BUTTON: //로그인 버튼 선택 시 
						test();
						break;
				}
			}
		}
	}
	
}

